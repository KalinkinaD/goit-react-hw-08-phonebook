{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactListElem/ContactListElem.module.css","components/ContactList/ContactList.module.css","redux/contacts/contactsOperations.js","components/ContactForm/ContactForm.js","Filter.js","components/ContactList/ContactListElem/ContactListElem.js","components/ContactList/ContactListElem/ContactListItemContainer.js","components/ContactList/ContactList.js","views/ContactsView.js"],"names":["module","exports","axios","defaults","baseURL","addContact","name","number","dispatch","contactActions","addContactRequest","post","then","data","addContactSuccess","catch","error","addContactError","fetchContacts","fetchContactRequest","get","fetchContactSuccess","fetchContactError","deleteContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","items","props","contacts","find","contact","alert","onSubmit","this","className","styles","contactForm","htmlFor","type","placeholder","onChange","format","mask","disabled","length","Component","connect","contactsOperations","mapDispatchToProps","onChangeFilter","contactsActions","setFilter","contactsSelectors","getFilter","useStyles","makeStyles","theme","margin","spacing","extendedIcon","marginRight","ContactListElem","classes","contactDescr","IconButton","aria-label","onClick","fontSize","ownProps","ContactsOperations","itemMove","enter","enterActive","exit","exitActive","contactSelectors","getFilteredContacts","console","log","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","ContactsView","onFetchContacts","Logo","isLoadingContacts","color","height","width","getContact","getLoading"],"mappings":"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","file":"static/js/6.427182e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1WBN-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactListElem_contact__1XB2T\",\"contactDescr\":\"ContactListElem_contactDescr__K3lT6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__2unXX\",\"enterActive\":\"ContactList_enterActive__2HVcS\",\"exit\":\"ContactList_exit__rwLu5\",\"exitActive\":\"ContactList_exitActive__2O4Gg\"};","import axios from \"axios\";\r\nimport contactActions from \"./contactsActions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:2000\";\r\n\r\nconst addContact = (name, number) => (dispatch) => {\r\n  dispatch(contactActions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", {\r\n      name,\r\n      number,\r\n    })\r\n    .then(({ data }) => dispatch(contactActions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(contactActions.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(contactActions.fetchContactRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(contactActions.fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(contactActions.fetchContactError(error)));\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(contactActions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`contacts/${id}`)\r\n    .then(() => dispatch(contactActions.deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(contactActions.deleteContactError(error)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  fetchContacts,\r\n  deleteContact,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { items } = this.props.state.contacts;\r\n\r\n    if (items && items.find((contact) => name === contact.name)) {\r\n      alert(\"Contact with such name is already exist\");\r\n    } else {\r\n      this.props.onSubmit(name, number);\r\n    }\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.contactForm}>\r\n        <label htmlFor=\"nameInput\">\r\n          Name:\r\n          <br />\r\n          <input\r\n            className=\"FormInput\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"enter name...\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"numberInput\">\r\n          Number:\r\n          <br />\r\n          <NumberFormat\r\n            className=\"FormInput\"\r\n            format=\"(###) ###-####\"\r\n            mask=\"\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"enter number...\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={!name.length || !number.length}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  onSubmit: contactsOperations.addContact,\r\n})(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"./redux/contacts/contactsActions\";\r\nimport contactsSelectors from \"./redux/contacts/contactsSelectors\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <form className=\"FilterForm\">\r\n      <label htmlFor=\"filterInput\">\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => onChangeFilter(e.target.value)}\r\n          value={value}\r\n          name=\"filter\"\r\n          className=\"FilterInput\"\r\n          placeholder=\"start typing searching name...\"\r\n        />\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    value: contactsSelectors.getFilter(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.setFilter,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport styles from \"./ContactListElem.module.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst ContactListElem = ({ contact: { name, number }, deleteContact }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <li className={styles.contact}>\r\n      <p className={styles.contactDescr}>\r\n        {name}: {number}\r\n      </p>\r\n      <IconButton\r\n        aria-label=\"delete\"\r\n        className={classes.margin}\r\n        type=\"button\"\r\n        onClick={deleteContact}\r\n      >\r\n        <DeleteIcon fontSize=\"small\" />\r\n      </IconButton>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListElem;\r\n","import { connect } from \"react-redux\";\r\nimport ContactListElem from \"./ContactListElem\";\r\nimport ContactsOperations from \"../../../redux/contacts/contactsOperations\";\r\n// import ContactsSelectors from \"../../../redux/contacts/contactsSelectors\";\r\n\r\n// const mapState = (state, ownProps) => {\r\n//   const contact = ContactsSelectors.getContactById(state, ownProps.id);\r\n\r\n//   return {\r\n//     ...contact,\r\n//   };\r\n// };\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  deleteContact: () =>\r\n    dispatch(ContactsOperations.deleteContact(ownProps.contact.id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactListElem);\r\n\r\n// const mapDispatchToProps = (dispatch, ownProps) => ({\r\n//   deleteContact: () =>\r\n//     dispatch(ContactsOperations.deleteContact(ownProps.contact.id)),\r\n// });\r\n","import React from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport ContactListElem from \"./ContactListElem/ContactListItemContainer\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport contactSelectors from \"../../redux/contacts/contactsSelectors\";\r\n\r\nconst itemMove = {\r\n  enter: styles.enter,\r\n  enterActive: styles.enterActive,\r\n  exit: styles.exit,\r\n  exitActive: styles.exitActive,\r\n};\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  console.log(\"ContactList re-render\");\r\n\r\n  return (\r\n    <TransitionGroup component=\"ul\">\r\n      {contacts &&\r\n        contacts.map((contact) => (\r\n          <CSSTransition key={contact.id} timeout={250} classNames={itemMove}>\r\n            <ContactListElem contact={contact} />\r\n          </CSSTransition>\r\n        ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  if (state.contacts) {\r\n    return {\r\n      contacts: contactSelectors.getFilteredContacts(state),\r\n    };\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsSelectors from \"../redux/contacts/contactsSelectors\";\r\nimport contactsOperations from \"../redux/contacts/contactsOperations\";\r\nimport ContactForm from \"../components/ContactForm\";\r\nimport { Logo } from \"../components/Logo\";\r\nimport Filter from \"../Filter\";\r\nimport ContactList from \"../components/ContactList\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nclass ContactsView extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contacts } = this.props;\r\n    return (\r\n      <div className=\"Wrapper\">\r\n        <Logo />\r\n        <ContactForm />\r\n        {contacts && contacts.length > 1 && <Filter />}\r\n        <h2 className=\"Title\">Contacts</h2>\r\n\r\n        {this.props.isLoadingContacts && (\r\n          <Loader type=\"Hearts\" color=\"pink\" height={80} width={80} />\r\n        )}\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getContact(state),\r\n  isLoadingContacts: contactsSelectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchContacts: contactsOperations.fetchContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\r\n"],"sourceRoot":""}