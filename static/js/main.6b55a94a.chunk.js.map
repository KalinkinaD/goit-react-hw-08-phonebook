{"version":3,"sources":["redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/auth/authReducer.js","components/Logo/Logo.module.css","redux/contacts/contactsSelectors.js","redux/auth/authActions.js","components/Logo/Logo.js","routes.js","components/Navigation.js","components/UserMenu.js","components/AppBar.js","components/PublicRoute.js","components/PrivateRoute.js","components/App.js","components/AppContainer.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","redux/contacts/contactsActions.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","authActions","registerRequest","post","then","response","data","registerSuccess","catch","error","registerError","logOut","logoutRequest","logoutSuccess","logoutError","logIn","loginRequest","loginSuccess","loginError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","isAuthenticated","state","getUserName","user","name","initialUserState","email","createReducer","_","payload","logInSuccess","logInError","combineReducers","module","exports","getContact","contacts","items","getFilter","filter","getFilteredContacts","createSelector","contact","toLowerCase","includes","getLoading","loading","createAction","logoStyles","appear","styles","appearActive","Logo","CSSTransition","in","timeout","classNames","unmountOnExit","path","label","exact","component","lazy","private","restricted","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","to","style","activeStyle","container","alignItems","avatar","marginRight","connect","authSelectors","onLogout","authOperations","src","alt","width","type","onClick","className","PublicRoute","Component","routeProps","useSelector","render","props","PrivateRoute","App","isloadingContacts","fallback","routes","map","route","key","AppContainer","this","onGetCurrentUser","contactsSelectors","ContactActions","fetchContactSuccess","action","addContactSuccess","deleteContactSuccess","id","setFilter","fetchContactRequest","fetchContactError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","authPersistConfig","storage","whitelist","store","configureStore","reducer","contactsReducer","persistReducer","authReducer","middleware","thunk","persistor","persistStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6b55a94a.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport authActions from \"./authActions\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com/\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (credentials) => (dispatch) => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  axios\r\n    .post(\"/users/signup\", credentials)\r\n    .then((response) => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(authActions.registerError(error)));\r\n};\r\n\r\nconst logIn = (credentials) => (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  axios\r\n    .post(\"/users/login\", credentials)\r\n    .then((response) => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.loginSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(authActions.loginError(error)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  axios\r\n    .get(\"/users/current\")\r\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n    .catch((error) => authActions.getCurrentUserError(error));\r\n};\r\n\r\nconst logOut = () => (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  axios\r\n    .post(\"/users/logout\")\r\n    .then(() => {\r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    })\r\n    .catch((error) => dispatch(authActions.logoutError(error)));\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","const isAuthenticated = (state) => state.auth.token;\r\n\r\nconst getUserName = (state) => state.auth.user.name;\r\n\r\nexport default { isAuthenticated, getUserName };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from \"./authActions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logInSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logInSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.logInError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__1IqI0\",\"appear\":\"Logo_appear__3v0Mr\",\"appearActive\":\"Logo_appearActive__2JE9h\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getContact = (state) => state.contacts.items;\r\n\r\nconst getLoading = (state) => state.contacts.loading;\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContact, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n);\r\n\r\n// const getContactById = createSelector(\r\n//   [(_, contactId) => contactId, getContact],\r\n//   (contactId, contacts) => contacts.find((contact) => contact.id === contactId)\r\n// );\r\n\r\nexport default {\r\n  getContact,\r\n  getLoading,\r\n  getFilter,\r\n  getFilteredContacts,\r\n  // getContactById,\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./Logo.module.css\";\r\n\r\nconst logoStyles = {\r\n  appear: styles.appear,\r\n  appearActive: styles.appearActive,\r\n};\r\nexport const Logo = () => {\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames={logoStyles}\r\n      unmountOnExit\r\n    >\r\n      <h1>Phonebook</h1>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\n/* <span role=\"img\" aria-label=\"TELEPHONE\">\r\n☎️\r\n</span> */\r\n","import { lazy } from \"react\";\r\n\r\nexport default [\r\n  {\r\n    path: \"/register\",\r\n    label: \"Register\",\r\n    exact: true,\r\n    component: lazy(() => import(\"./views/RegisterView\")),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    label: \"Login\",\r\n    exact: true,\r\n    component: lazy(() => import(\"./views/LoginView\")),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: \"/contacts\",\r\n    label: \"Contacts\",\r\n    exact: true,\r\n    component: lazy(() => import(\"./views/ContactsView\")),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: \"#2A363B\",\r\n  },\r\n  activeLink: {\r\n    color: \"#E84A5F\",\r\n  },\r\n};\r\n\r\nconst Navigation = () => (\r\n  <nav>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      LogIn\r\n    </NavLink>\r\n\r\n    <br />\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Register\r\n    </NavLink>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { authSelectors, authOperations } from \"../redux/auth\";\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar:\r\n    \"https://icon-library.net/images/avatar-icon-images/avatar-icon-images-7.jpg\",\r\n});\r\n\r\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\r\n  UserMenu\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\nimport { Logo } from \"./Logo\";\r\nimport Navigation from \"./Navigation\";\r\nimport UserMenu from \"./UserMenu\";\r\n\r\nconst AppBar = ({ isAuthenticated }) => {\r\n  return (\r\n    <header className=\"Wrapper\">\r\n      <Logo />\r\n      {isAuthenticated ? <UserMenu /> : <Navigation />}\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PublicRoute = ({ component: Component, restricted, ...routeProps }) => {\r\n  const isAuthenticated = useSelector((state) => state.auth.token);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(props) =>\r\n        isAuthenticated && restricted ? (\r\n          <Redirect to=\"/contacts\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n// import { connect } from \"react-redux\";\r\n// import { authSelectors } from \"../redux/auth\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...routeProps }) => {\r\n  const isAuthenticated = useSelector((state) => state.auth.token);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   isAuthenticated: authSelectors.isAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(PrivateRoute)\r\n","import React, { Suspense } from \"react\";\nimport { BrowserRouter, Switch, Redirect } from \"react-router-dom\";\nimport routes from \"../routes\";\n// import Loader from \"react-loader-spinner\";\nimport AppBar from \"./AppBar\";\nimport PublicRoute from \"./PublicRoute\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst App = ({ isloadingContacts }) => {\n  return (\n    <BrowserRouter>\n      <AppBar />\n      <Suspense fallback={<h1>Loading...</h1>}>\n        <Switch>\n          {routes.map((route) =>\n            route.private ? (\n              <PrivateRoute key={route.label} {...route} />\n            ) : (\n              <PublicRoute key={route.label} {...route} />\n            )\n          )}\n          <Redirect to=\"/login\" />\n        </Switch>\n      </Suspense>\n    </BrowserRouter>\n  );\n};\nexport default App;\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsSelectors from \"../redux/contacts/contactsSelectors\";\r\nimport { authOperations } from \"../redux/auth\";\r\nimport App from \"./App\";\r\n\r\nclass AppContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return <App {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isloadingContacts: contactsSelectors.getLoading(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onGetCurrentUser: () => dispatch(authOperations.getCurrentUser()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport ContactActions from \"./contactsActions\";\r\n\r\nconst onAdd = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\nconst onDelete = (state, action) =>\r\n  state.filter((contact) => contact.id !== action.payload);\r\n\r\nconst items = createReducer([], {\r\n  [ContactActions.fetchContactSuccess]: (_, action) => action.payload,\r\n  [ContactActions.addContactSuccess]: onAdd,\r\n  [ContactActions.deleteContactSuccess]: onDelete,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [ContactActions.setFilter]: (_, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [ContactActions.fetchContactRequest]: () => true,\r\n  [ContactActions.fetchContactSuccess]: () => false,\r\n  [ContactActions.fetchContactError]: () => false,\r\n  [ContactActions.addContactRequest]: () => true,\r\n  [ContactActions.addContactSuccess]: () => false,\r\n  [ContactActions.addContactError]: () => false,\r\n  [ContactActions.deleteContactRequest]: () => true,\r\n  [ContactActions.deleteContactSuccess]: () => false,\r\n  [ContactActions.deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport thunk from \"redux-thunk\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\nimport authReducer from \"./auth/authReducer\";\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware: [thunk],\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./components/AppContainer\";\nimport \"./index.css\";\n\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactRequest = createAction(\"contacts/addRequest\");\r\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\r\nconst addContactError = createAction(\"contacts/addError\");\r\n\r\nconst deleteContactRequest = createAction(\"contact/deleteRequest\");\r\nconst deleteContactSuccess = createAction(\"contacts/deleteSuccess\");\r\nconst deleteContactError = createAction(\"contacts/deleteError\");\r\n\r\nconst fetchContactRequest = createAction(\"contact/fetchRequest\");\r\nconst fetchContactSuccess = createAction(\"contacts/fetchSuccess\");\r\nconst fetchContactError = createAction(\"contacts/fetchError\");\r\n\r\nconst setFilter = createAction(\"contact/filter\");\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  setFilter,\r\n};\r\n"],"sourceRoot":""}